# name: test/sql/a5.test
# description: test a5 extension
# group: [sql]

# Before we load the extension, this will fail
statement error
SELECT a5('test');
----
Catalog Error: Scalar Function with name a5 does not exist!

# Require statement will ensure this test is run with this extension loaded
require a5

-- Test getting the area of a A5 cell.
query R
select round(a5_area(columns(*)::integer)) from range(31)
----
42505468731620.0
8501093746324.0
2125273436581.0
531318359145.0
132829589786.0
33207397447.0
8301849362.0
2075462340.0
518865585.0
129716396.0
32429099.0
8107275.0
2026819.0
506705.0
126676.0
31669.0
7917.0
1979.0
495.0
124.0
31.0
8.0
2.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0

-- Get the number of cells at each resolution level, there are
-- 30 different resolution levels
query I
select a5_num_cells(columns(*)::integer) from range(31)
----
12
60
240
960
3840
15360
61440
245760
983040
3932160
15728640
62914560
251658240
1006632960
4026531840
16106127360
64424509440
257698037760
1030792151040
4123168604160
16492674416640
65970697666560
263882790666240
1055531162664960
4222124650659840
16888498602639360
67553994410557440
270215977642229760
1080863910568919000
4323455642275676000
17293822569102705000

-- Get the resolution from a cell.
query I
select a5_resolution(a5_cell(55, 44, columns(*)::integer)) from range(30);
----
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29

-- Get the cell for a longitude, latitude pair.
query I
select a5_cell(55, 44, columns(*)::integer) from range(30);
----
1585267068834414592
7277816997830721536
7385903388887613440
7376896189632872448
7374644389819187200
7376333239679451136
7375629552237674496
7375735105353940992
7375726309260918784
7375724110237663232
7375724659993477120
7375724797432430592
7375724763072692224
7375724909101580288
7375724902659129344
7375724901048516608
7375724903598653440
7375724903565099008
7375724903472824320
7375724903470727168
7375724903506903040
7375724903470858240
7375724903507329024
7375724903507304448
7375724903507314688
7375724903507324416
7375724903507325312
7375724903507325344
7375724903507325336
7375724903507325338


-- Get the parent cell from a A5 cell.
query I
select a5_parent(a5_cell(55, 44, columns(*)::integer), columns(*)::integer-1) from range(1, 30);
----
1585267068834414592
7277816997830721536
7385903388887613440
7376896189632872448
7374644389819187200
7375207339772608512
7375629552237674496
7375735105353940992
7375726309260918784
7375724110237663232
7375724659993477120
7375724797432430592
7375724900511645696
7375724909101580288
7375724902659129344
7375724903196000256
7375724903598653440
7375724903497990144
7375724903472824320
7375724903508475904
7375724903471251456
7375724903507296256
7375724903507329024
7375724903507320832
7375724903507322880
7375724903507325440
7375724903507325312
7375724903507325344
7375724903507325336

-- a5_lon_lat get the center of the A5 cell.
query I
select list_transform(a5_lon_lat(a5_cell(55, 44, columns(*)::integer)), x -> round(x)) from range(1, 30);
----
[51.0, 48.0]
[57.0, 48.0]
[56.0, 45.0]
[53.0, 44.0]
[56.0, 45.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]

-- Get the list of top level A5 cells at resolution 0
query I
select a5_res0_cells()
----
[144115188075855872, 432345564227567616, 720575940379279360, 1008806316530991104, 1297036692682702848, 1585267068834414592, 1873497444986126336, 2161727821137838080, 2449958197289549824, 2738188573441261568, 3026418949592973312, 3314649325744685056]

-- Get the child cells of any A5 cell.
query I
select a5_children(a5_cell(55, 44, columns(*)::integer), columns(*)::integer+1)  from range(0, 29);
----
[7566047373982433280, 7854277750134145024, 8142508126285856768, 8430738502437568512, 7277816997830721536]
[7241788200811757568, 7313845794849685504, 7385903388887613440, 7457960982925541376]
[7358881791123390464, 7376896189632872448, 7394910588142354432, 7412924986651836416]
[7370140790191816704, 7374644389819187200, 7379147989446557696, 7383651589073928192]
[7372955539958923264, 7374081439865765888, 7375207339772608512, 7376333239679451136]
[7375911027214385152, 7376192502191095808, 7376473977167806464, 7376755452144517120]
[7375523999121408000, 7375594367865585664, 7375664736609763328, 7375735105353940992]
[7375708717074874368, 7375726309260918784, 7375743901446963200, 7375761493633007616]
[7375719712191152128, 7375724110237663232, 7375728508284174336, 7375732906330685440]
[7375722460970221568, 7375723560481849344, 7375724659993477120, 7375725759505104896]
[7375724247676616704, 7375724522554523648, 7375724797432430592, 7375725072310337536]
[7375724694353215488, 7375724763072692224, 7375724831792168960, 7375724900511645696]
[7375724737302888448, 7375724754482757632, 7375724771662626816, 7375724788842496000]
[7375724902659129344, 7375724906954096640, 7375724911249063936, 7375724915544031232]
[7375724901048516608, 7375724902122258432, 7375724903196000256, 7375724904269742080]
[7375724900645863424, 7375724900914298880, 7375724901182734336, 7375724901451169792]
[7375724903497990144, 7375724903565099008, 7375724903632207872, 7375724903699316736]
[7375724903539933184, 7375724903556710400, 7375724903573487616, 7375724903590264832]
[7375724903466532864, 7375724903470727168, 7375724903474921472, 7375724903479115776]
[7375724903469154304, 7375724903470202880, 7375724903471251456, 7375724903472300032]
[7375724903506509824, 7375724903506771968, 7375724903507034112, 7375724903507296256]
[7375724903470759936, 7375724903470825472, 7375724903470891008, 7375724903470956544]
[7375724903507304448, 7375724903507320832, 7375724903507337216, 7375724903507353600]
[7375724903507298304, 7375724903507302400, 7375724903507306496, 7375724903507310592]
[7375724903507313152, 7375724903507314176, 7375724903507315200, 7375724903507316224]
[7375724903507324032, 7375724903507324288, 7375724903507324544, 7375724903507324800]
[7375724903507325216, 7375724903507325280, 7375724903507325344, 7375724903507325408]
[7375724903507325320, 7375724903507325336, 7375724903507325352, 7375724903507325368]
[7375724903507325330, 7375724903507325334, 7375724903507325338, 7375724903507325342]


-- Get the coordinates of the boundary of any A5 cell with at_boundary
query I
select list_transform(a5_boundary(a5_cell(55, 44, columns(*)::integer)), x -> list_transform(x, y-> round(y, 3))) from range(1, 30);
----
[[51.0, 26.668], [51.76, 27.597], [52.534, 28.521], [53.32, 29.441], [54.122, 30.357], [54.939, 31.268], [55.772, 32.173], [56.622, 33.074], [57.49, 33.97], [58.377, 34.859], [59.284, 35.743], [60.212, 36.621], [61.163, 37.492], [62.137, 38.356], [63.135, 39.214], [64.16, 40.063], [65.212, 40.904], [66.292, 41.737], [67.402, 42.561], [68.544, 43.375], [69.719, 44.179], [70.929, 44.972], [72.174, 45.754], [73.458, 46.523], [74.781, 47.28], [76.146, 48.022], [77.554, 48.75], [79.007, 49.462], [80.506, 50.157], [82.053, 50.834], [83.65, 51.492], [85.299, 52.13], [87.0, 52.746], [85.144, 53.372], [83.226, 53.971], [81.248, 54.54], [79.21, 55.077], [77.111, 55.581], [74.955, 56.049], [72.743, 56.48], [70.477, 56.871], [68.162, 57.221], [65.801, 57.528], [63.4, 57.79], [60.964, 58.007], [58.499, 58.177], [56.012, 58.299], [53.51, 58.373], [51.0, 58.397], [48.49, 58.373], [45.988, 58.299], [43.501, 58.177], [41.036, 58.007], [38.6, 57.79], [36.199, 57.528], [33.838, 57.221], [31.523, 56.871], [29.257, 56.48], [27.045, 56.049], [24.889, 55.581], [22.79, 55.077], [20.752, 54.54], [18.774, 53.971], [16.856, 53.372], [15.0, 52.746], [16.701, 52.13], [18.35, 51.492], [19.947, 50.834], [21.494, 50.157], [22.993, 49.462], [24.446, 48.75], [25.854, 48.022], [27.219, 47.28], [28.542, 46.523], [29.826, 45.754], [31.071, 44.972], [32.281, 44.179], [33.456, 43.375], [34.598, 42.561], [35.708, 41.737], [36.788, 40.904], [37.84, 40.063], [38.865, 39.214], [39.863, 38.356], [40.837, 37.492], [41.788, 36.621], [42.716, 35.743], [43.623, 34.859], [44.51, 33.97], [45.378, 33.074], [46.228, 32.173], [47.061, 31.268], [47.878, 30.357], [48.68, 29.441], [49.466, 28.521], [50.24, 27.597], [51.0, 26.668]]
[[51.0, 58.397], [50.798, 57.71], [50.602, 57.023], [50.413, 56.337], [50.23, 55.652], [50.053, 54.968], [49.881, 54.284], [49.713, 53.601], [49.551, 52.918], [49.392, 52.237], [49.238, 51.555], [49.088, 50.874], [48.941, 50.194], [48.798, 49.514], [48.658, 48.834], [48.521, 48.155], [48.387, 47.476], [48.739, 46.844], [49.082, 46.211], [49.418, 45.577], [49.748, 44.943], [50.07, 44.308], [50.386, 43.673], [50.696, 43.036], [51.0, 42.399], [51.298, 41.761], [51.591, 41.122], [51.879, 40.482], [52.162, 39.84], [52.44, 39.198], [52.713, 38.554], [52.982, 37.908], [53.246, 37.26], [53.971, 37.542], [54.699, 37.815], [55.431, 38.081], [56.166, 38.338], [56.904, 38.588], [57.645, 38.831], [58.389, 39.067], [59.136, 39.296], [59.886, 39.518], [60.639, 39.735], [61.394, 39.944], [62.152, 40.148], [62.913, 40.346], [63.676, 40.538], [64.443, 40.724], [65.212, 40.904], [65.234, 41.621], [65.254, 42.336], [65.274, 43.047], [65.293, 43.757], [65.312, 44.465], [65.331, 45.171], [65.35, 45.875], [65.37, 46.579], [65.392, 47.281], [65.414, 47.983], [65.438, 48.684], [65.463, 49.384], [65.491, 50.083], [65.52, 50.783], [65.552, 51.482], [65.586, 52.181], [64.799, 52.622], [63.996, 53.057], [63.177, 53.485], [62.342, 53.906], [61.49, 54.321], [60.622, 54.729], [59.737, 55.129], [58.835, 55.522], [57.917, 55.909], [56.981, 56.287], [56.028, 56.658], [55.057, 57.022], [54.069, 57.378], [53.064, 57.726], [52.041, 58.065], [51.0, 58.397]]
[[59.803, 44.456], [59.748, 45.148], [59.691, 45.84], [59.634, 46.531], [59.576, 47.222], [59.518, 47.913], [59.459, 48.604], [59.4, 49.295], [59.339, 49.985], [58.432, 49.734], [57.533, 49.475], [56.642, 49.209], [55.759, 48.935], [54.884, 48.653], [54.019, 48.363], [53.161, 48.066], [52.313, 47.762], [52.135, 47.09], [51.962, 46.419], [51.793, 45.749], [51.628, 45.078], [51.466, 44.408], [51.307, 43.738], [51.152, 43.068], [51.0, 42.399], [51.764, 42.076], [52.521, 41.744], [53.27, 41.404], [54.011, 41.055], [54.744, 40.696], [55.467, 40.328], [56.181, 39.95], [56.884, 39.563], [57.225, 40.177], [57.571, 40.79], [57.925, 41.403], [58.285, 42.015], [58.653, 42.626], [59.029, 43.237], [59.412, 43.847], [59.803, 44.456]]
[[55.347, 43.547], [55.239, 44.228], [55.129, 44.909], [55.017, 45.589], [54.902, 46.27], [54.072, 45.983], [53.25, 45.689], [52.435, 45.388], [51.628, 45.078], [51.466, 44.408], [51.307, 43.738], [51.152, 43.068], [51.0, 42.399], [51.764, 42.076], [52.521, 41.744], [53.27, 41.404], [54.011, 41.055], [54.336, 41.679], [54.666, 42.302], [55.003, 42.925], [55.347, 43.547]]
[[54.902, 46.27], [54.701, 45.604], [54.505, 44.939], [54.779, 44.284], [55.047, 43.628], [55.847, 43.902], [56.654, 44.168], [56.56, 44.852], [56.465, 45.536], [55.689, 45.907], [54.902, 46.27]]
[[54.779, 44.284], [54.587, 43.62], [54.854, 42.965], [55.646, 43.24], [55.541, 43.921], [54.779, 44.284]]
[[54.779, 44.284], [54.682, 43.952], [54.817, 43.625], [55.216, 43.764], [55.161, 44.104], [54.779, 44.284]]
[[55.026, 43.854], [54.998, 44.024], [54.798, 43.954], [54.75, 43.788], [54.94, 43.698], [55.026, 43.854]]
[[54.998, 44.024], [54.974, 43.941], [55.007, 43.859], [55.107, 43.894], [55.094, 43.979], [54.998, 44.024]]
[[54.998, 44.024], [54.986, 43.983], [55.003, 43.942], [55.053, 43.959], [55.046, 44.002], [54.998, 44.024]]
[[54.998, 44.024], [54.992, 44.004], [55.0, 43.983], [55.026, 43.992], [55.022, 44.013], [54.998, 44.024]]
[[55.014, 43.997], [55.012, 44.008], [54.999, 44.004], [54.996, 43.993], [55.008, 43.988], [55.014, 43.997]]
[[54.997, 44.009], [54.996, 44.004], [54.998, 43.999], [55.004, 44.001], [55.003, 44.006], [54.997, 44.009]]
[[55.0, 44.0], [55.0, 43.997], [55.003, 43.998], [55.004, 44.001], [55.001, 44.002], [55.0, 44.0]]
[[54.998, 44.0], [54.998, 43.999], [55.0, 44.0], [55.0, 44.001], [54.999, 44.002], [54.998, 44.0]]
[[55.0, 43.999], [55.001, 44.0], [55.0, 44.0], [54.999, 44.0], [55.0, 43.999], [55.0, 43.999]]
[[55.0, 44.0], [55.0, 43.999], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]