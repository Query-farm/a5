# name: test/sql/a5.test
# description: test a5 extension
# group: [sql]

# Before we load the extension, this will fail
statement error
SELECT a5('test');
----
Catalog Error: Scalar Function with name a5 does not exist!

# Require statement will ensure this test is run with this extension loaded
require a5

# Test getting the area of a A5 cell.
query R
select round(a5_area(columns(*)::integer)) from range(31)
----
42505468731620.0
8501093746324.0
2125273436581.0
531318359145.0
132829589786.0
33207397447.0
8301849362.0
2075462340.0
518865585.0
129716396.0
32429099.0
8107275.0
2026819.0
506705.0
126676.0
31669.0
7917.0
1979.0
495.0
124.0
31.0
8.0
2.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0

# Get the number of cells at each resolution level, there are
# 30 different resolution levels
query I
select a5_num_cells(columns(*)::integer) from range(31)
----
12
60
240
960
3840
15360
61440
245760
983040
3932160
15728640
62914560
251658240
1006632960
4026531840
16106127360
64424509440
257698037760
1030792151040
4123168604160
16492674416640
65970697666560
263882790666240
1055531162664960
4222124650659840
16888498602639360
67553994410557440
270215977642229760
1080863910568919000
4323455642275676000
17293822569102705000

# Get the resolution from a cell.
query I
select a5_resolution(a5_cell(55, 44, columns(*)::integer)) from range(30);
----
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29

# Get the cell for a longitude, latitude pair.
query I
select a5_cell(55, 44, columns(*)::integer) from range(30);
----
1585267068834414592
7277816997830721536
7241788200811757568
7268809798575980544
7271061598389665792
7270498648436244480
7270639385924599808
7270604201552510976
7270630589831577600
7270689963459477504
7270689413703663616
7270689551142617088
7270689516782878720
7270689525372813312
7270689514635395072
7270689517319749632
7270689517722402816
7270689517554630656
7270689517579796480
7270689517586087936
7270689517588709376
7270689517589102592
7270689517588938752
7270689517588963328
7270689517588985856
7270689517588985344
7270689517588987008
7270689517588985376
7270689517588985384
7270689517588985382

# Get the parent cell from a A5 cell.
query I
select a5_parent(a5_cell(55, 44, columns(*)::integer), columns(*)::integer-1) from range(1, 30);
----
1585267068834414592
7277816997830721536
7241788200811757568
7268809798575980544
7271061598389665792
7270498648436244480
7270639385924599808
7270604201552510976
7270683366389710848
7270689963459477504
7270689413703663616
7270689551142617088
7270689516782878720
7270689508192944128
7270689518930362368
7270689517319749632
7270689517453967360
7270689517554630656
7270689517579796480
7270689517590282240
7270689517588709376
7270689517588840448
7270689517588938752
7270689517588979712
7270689517588985856
7270689517588987392
7270689517588985472
7270689517588985376
7270689517588985384

# a5_lon_lat get the center of the A5 cell.
query I
select list_transform(a5_lat_lon(a5_cell(55, 44, columns(*)::integer)), x -> round(x)) from range(1, 30);
----
[48.0, 51.0]
[52.0, 40.0]
[56.0, 45.0]
[55.0, 43.0]
[55.0, 43.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]
[55.0, 44.0]

# Get the list of top level A5 cells at resolution 0
query I
select a5_res0_cells()
----
[144115188075855872, 432345564227567616, 720575940379279360, 1008806316530991104, 1297036692682702848, 1585267068834414592, 1873497444986126336, 2161727821137838080, 2449958197289549824, 2738188573441261568, 3026418949592973312, 3314649325744685056]

# Get the child cells of any A5 cell.
query I
select a5_children(a5_cell(55, 44, columns(*)::integer), columns(*)::integer+1)  from range(0, 29);
----
[7566047373982433280, 7854277750134145024, 8142508126285856768, 8430738502437568512, 7277816997830721536]
[7241788200811757568, 7313845794849685504, 7385903388887613440, 7457960982925541376]
[7214766603047534592, 7232781001557016576, 7250795400066498560, 7268809798575980544]
[7262054399134924800, 7266557998762295296, 7271061598389665792, 7275565198017036288]
[7269372748529401856, 7270498648436244480, 7271624548343087104, 7272750448249929728]
[7270076435971178496, 7270357910947889152, 7270639385924599808, 7270920860901310464]
[7270533832808333312, 7270604201552510976, 7270674570296688640, 7270744939040866304]
[7270577813273444352, 7270595405459488768, 7270612997645533184, 7270630589831577600]
[7270623992761810944, 7270628390808322048, 7270632788854833152, 7270637186901344256]
[7270688314192035840, 7270689413703663616, 7270690513215291392, 7270691612726919168]
[7270689001386803200, 7270689276264710144, 7270689551142617088, 7270689826020524032]
[7270689448063401984, 7270689516782878720, 7270689585502355456, 7270689654221832192]
[7270689491013074944, 7270689508192944128, 7270689525372813312, 7270689542552682496]
[7270689518930362368, 7270689523225329664, 7270689527520296960, 7270689531815264256]
[7270689513024782336, 7270689514098524160, 7270689515172265984, 7270689516246007808]
[7270689516917096448, 7270689517185531904, 7270689517453967360, 7270689517722402816]
[7270689517621739520, 7270689517688848384, 7270689517755957248, 7270689517823066112]
[7270689517529464832, 7270689517546242048, 7270689517563019264, 7270689517579796480]
[7270689517573505024, 7270689517577699328, 7270689517581893632, 7270689517586087936]
[7270689517584515072, 7270689517585563648, 7270689517586612224, 7270689517587660800]
[7270689517588316160, 7270689517588578304, 7270689517588840448, 7270689517589102592]
[7270689517589004288, 7270689517589069824, 7270689517589135360, 7270689517589200896]
[7270689517588914176, 7270689517588930560, 7270689517588946944, 7270689517588963328]
[7270689517588957184, 7270689517588961280, 7270689517588965376, 7270689517588969472]
[7270689517588984320, 7270689517588985344, 7270689517588986368, 7270689517588987392]
[7270689517588984960, 7270689517588985216, 7270689517588985472, 7270689517588985728]
[7270689517588986912, 7270689517588986976, 7270689517588987040, 7270689517588987104]
[7270689517588985352, 7270689517588985368, 7270689517588985384, 7270689517588985400]
[7270689517588985378, 7270689517588985382, 7270689517588985386, 7270689517588985390]


# Get the coordinates of the boundary of any A5 cell with at_boundary
query I
select list_transform(a5_boundary(a5_cell(55, 44, columns(*)::integer)), x -> list_transform(x, y-> round(y, 3))) from range(1, 30);
----
[[26.668, 51.0], [27.597, 51.76], [28.521, 52.534], [29.441, 53.32], [30.357, 54.122], [31.268, 54.939], [32.173, 55.772], [33.074, 56.622], [33.97, 57.49], [34.859, 58.377], [35.743, 59.284], [36.621, 60.212], [37.492, 61.163], [38.356, 62.137], [39.214, 63.135], [40.063, 64.16], [40.904, 65.212], [41.737, 66.292], [42.561, 67.402], [43.375, 68.544], [44.179, 69.719], [44.972, 70.929], [45.754, 72.174], [46.523, 73.458], [47.28, 74.781], [48.022, 76.146], [48.75, 77.554], [49.462, 79.007], [50.157, 80.506], [50.834, 82.053], [51.492, 83.65], [52.13, 85.299], [52.746, 87.0], [53.372, 85.144], [53.971, 83.226], [54.54, 81.248], [55.077, 79.21], [55.581, 77.111], [56.049, 74.955], [56.48, 72.743], [56.871, 70.477], [57.221, 68.162], [57.528, 65.801], [57.79, 63.4], [58.007, 60.964], [58.177, 58.499], [58.299, 56.012], [58.373, 53.51], [58.397, 51.0], [58.373, 48.49], [58.299, 45.988], [58.177, 43.501], [58.007, 41.036], [57.79, 38.6], [57.528, 36.199], [57.221, 33.838], [56.871, 31.523], [56.48, 29.257], [56.049, 27.045], [55.581, 24.889], [55.077, 22.79], [54.54, 20.752], [53.971, 18.774], [53.372, 16.856], [52.746, 15.0], [52.13, 16.701], [51.492, 18.35], [50.834, 19.947], [50.157, 21.494], [49.462, 22.993], [48.75, 24.446], [48.022, 25.854], [47.28, 27.219], [46.523, 28.542], [45.754, 29.826], [44.972, 31.071], [44.179, 32.281], [43.375, 33.456], [42.561, 34.598], [41.737, 35.708], [40.904, 36.788], [40.063, 37.84], [39.214, 38.865], [38.356, 39.863], [37.492, 40.837], [36.621, 41.788], [35.743, 42.716], [34.859, 43.623], [33.97, 44.51], [33.074, 45.378], [32.173, 46.228], [31.268, 47.061], [30.357, 47.878], [29.441, 48.68], [28.521, 49.466], [27.597, 50.24], [26.668, 51.0]]
[[51.27, 31.037], [50.632, 31.476], [49.993, 31.901], [49.352, 32.313], [48.71, 32.714], [48.067, 33.103], [47.423, 33.482], [46.777, 33.851], [46.13, 34.209], [45.482, 34.559], [44.832, 34.9], [44.181, 35.233], [43.529, 35.557], [42.875, 35.875], [42.22, 36.186], [41.563, 36.49], [40.904, 36.788], [41.379, 37.415], [41.844, 38.056], [42.301, 38.713], [42.749, 39.383], [43.188, 40.067], [43.619, 40.764], [44.042, 41.474], [44.456, 42.197], [44.862, 42.931], [45.259, 43.677], [45.649, 44.435], [46.03, 45.204], [46.404, 45.984], [46.769, 46.774], [47.127, 47.576], [47.476, 48.387], [48.155, 48.521], [48.834, 48.658], [49.514, 48.798], [50.194, 48.941], [50.874, 49.088], [51.555, 49.238], [52.237, 49.392], [52.918, 49.551], [53.601, 49.713], [54.284, 49.881], [54.968, 50.053], [55.652, 50.23], [56.337, 50.413], [57.023, 50.602], [57.71, 50.798], [58.397, 51.0], [58.72, 49.94], [59.034, 48.858], [59.339, 47.756], [59.634, 46.632], [59.919, 45.487], [60.194, 44.321], [60.459, 43.134], [60.714, 41.926], [60.957, 40.699], [61.19, 39.451], [61.412, 38.185], [61.623, 36.899], [61.821, 35.595], [62.009, 34.273], [62.184, 32.935], [62.348, 31.58], [61.667, 31.572], [60.986, 31.564], [60.303, 31.556], [59.619, 31.549], [58.934, 31.542], [58.247, 31.535], [57.56, 31.529], [56.871, 31.523], [56.172, 31.462], [55.474, 31.401], [54.774, 31.34], [54.075, 31.279], [53.375, 31.218], [52.674, 31.157], [51.972, 31.097], [51.27, 31.037]]
[[55.279, 40.144], [54.617, 40.496], [53.955, 40.836], [53.294, 41.165], [52.632, 41.484], [51.97, 41.792], [51.309, 42.09], [50.647, 42.38], [49.985, 42.661], [50.378, 43.476], [50.764, 44.304], [51.142, 45.145], [51.512, 46.0], [51.875, 46.868], [52.231, 47.749], [52.578, 48.643], [52.918, 49.551], [53.601, 49.713], [54.284, 49.881], [54.968, 50.053], [55.652, 50.23], [56.337, 50.413], [57.023, 50.602], [57.71, 50.798], [58.397, 51.0], [58.72, 49.94], [59.034, 48.858], [59.339, 47.756], [59.634, 46.632], [59.919, 45.487], [60.194, 44.321], [60.459, 43.134], [60.714, 41.926], [60.039, 41.689], [59.364, 41.462], [58.686, 41.245], [58.007, 41.036], [57.325, 40.804], [56.643, 40.578], [55.961, 40.358], [55.279, 40.144]]
[[58.007, 41.036], [57.309, 41.01], [56.611, 40.982], [55.914, 40.954], [55.218, 40.925], [54.603, 41.443], [53.986, 41.945], [53.369, 42.433], [52.751, 42.907], [53.139, 43.77], [53.521, 44.648], [53.895, 45.541], [54.262, 46.449], [54.936, 46.19], [55.61, 45.923], [56.284, 45.646], [56.959, 45.359], [57.234, 44.299], [57.501, 43.225], [57.758, 42.138], [58.007, 41.036]]
[[54.817, 44.464], [55.488, 44.17], [56.158, 43.867], [55.771, 42.945], [55.376, 42.04], [54.681, 41.993], [53.986, 41.945], [53.735, 42.938], [53.476, 43.92], [54.147, 44.188], [54.817, 44.464]]
[[54.147, 44.188], [54.839, 44.271], [55.465, 43.79], [55.076, 42.883], [54.409, 43.192], [54.147, 44.188]]
[[54.947, 43.391], [54.613, 43.543], [54.805, 43.993], [55.152, 44.032], [55.284, 43.524], [54.947, 43.391]]
[[55.05, 43.711], [54.883, 43.786], [54.979, 44.012], [55.152, 44.032], [55.218, 43.778], [55.05, 43.711]]
[[54.9, 44.072], [54.987, 44.082], [55.065, 44.022], [55.017, 43.909], [54.934, 43.946], [54.9, 44.072]]
[[55.001, 43.972], [54.959, 43.991], [54.983, 44.047], [55.026, 44.052], [55.043, 43.989], [55.001, 43.972]]
[[55.022, 43.981], [55.0, 43.978], [54.98, 43.993], [54.992, 44.022], [55.013, 44.012], [55.022, 43.981]]
[[54.997, 44.006], [55.007, 44.001], [55.001, 43.987], [54.99, 43.986], [54.986, 44.001], [54.997, 44.006]]
[[54.991, 44.004], [54.997, 44.004], [55.002, 44.0], [54.999, 43.993], [54.993, 43.996], [54.991, 44.004]]
[[54.999, 44.002], [55.002, 44.003], [55.004, 44.001], [55.003, 43.997], [55.0, 43.998], [54.999, 44.002]]
[[55.0, 44.0], [55.001, 44.0], [55.0, 43.998], [54.999, 43.998], [54.998, 44.0], [55.0, 44.0]]
[[55.001, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.001], [55.001, 44.001], [55.001, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [54.999, 44.0], [55.0, 44.001], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]
[[55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0], [55.0, 44.0]]